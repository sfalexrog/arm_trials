# if you update this file, please consider updating Vagrantfile too

language: cpp

env:
  global:
    - JOBS=6
    # QT_FATAL_WARNINGS is turned off because Qt 5.11.3 throws a speech dispatcher not working warning when running unit tests
    #- QT_FATAL_WARNINGS=1
    - SHADOW_BUILD_DIR=/tmp/shadow_build_dir

jobs:
  fast_finish: true
  include:
    - name: "Unit tests (Linux)"
      os: linux
      dist: xenial
      env: SPEC=linux-g++-64 CONFIG=debug
      services: xvfb
      addons:
        apt:
          packages:
            - speech-dispatcher
            - libgstreamer-plugins-base1.0-dev
            - libgstreamer1.0-0:amd64
            - libgstreamer1.0-dev
            - libsdl2-dev
            - libudev-dev
            - wget
      before_install:
        - export JOBS=$((`cat /proc/cpuinfo | grep -c ^processor`+1))
      install:
        - wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.11.3-gcc_64-min.tar.bz2 &&
          tar jxf Qt5.11.3-gcc_64-min.tar.bz2 -C /tmp &&
          export PATH=/tmp/Qt5.11-gcc_64/5.11.3/gcc_64/bin:$PATH
      before_script:
        - cd ${TRAVIS_BUILD_DIR}
      script:
        - mkdir ${SHADOW_BUILD_DIR} && cd ${SHADOW_BUILD_DIR}
        - qmake -r ${TRAVIS_BUILD_DIR}/qgroundcontrol.pro CONFIG+=${CONFIG} -spec ${SPEC}
        - make -j$JOBS;
        - mkdir -p ~/.config/QtProject/ &&
          cp ${TRAVIS_BUILD_DIR}/test/qtlogging.ini ~/.config/QtProject/ &&
          ./debug/qgroundcontrol-start.sh --unittest

    - name: "Linux AppImage"
      os: linux
      dist: xenial
      env: SPEC=linux-g++-64 CONFIG=installer
      addons:
        apt:
          packages:
            - speech-dispatcher
            - libgstreamer-plugins-base1.0-dev
            - libgstreamer1.0-0:amd64
            - libgstreamer1.0-dev
            - libsdl2-dev
            - libudev-dev
            - wget
      before_install:
        - cd ${TRAVIS_BUILD_DIR} && git fetch --unshallow && git fetch --all --tags
        - export JOBS=$((`cat /proc/cpuinfo | grep -c ^processor`+1));
      install:
        - wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.11.3-gcc_64-min.tar.bz2 &&
          tar jxf Qt5.11.3-gcc_64-min.tar.bz2 -C /tmp &&
          export PATH=/tmp/Qt5.11-gcc_64/5.11.3/gcc_64/bin:$PATH
      before_script:
        - cd ${TRAVIS_BUILD_DIR}
      script:
        - mkdir ${SHADOW_BUILD_DIR} && cd ${SHADOW_BUILD_DIR}
        - qmake -r ${TRAVIS_BUILD_DIR}/qgroundcontrol.pro CONFIG+=${CONFIG} -spec ${SPEC}
        - make -j$JOBS
      before_deploy:
      - cd ${TRAVIS_BUILD_DIR}
      - ./deploy/create_linux_appimage.sh ${TRAVIS_BUILD_DIR} ${SHADOW_BUILD_DIR}/release ${SHADOW_BUILD_DIR}/release/package
    
    - name: "Android apk"
      os: linux
      dist: trusty
      language: android
      android:
        components:
          - android-25
          - build-tools-25.0.3
          - platform-tools
      env: SPEC=android-g++ CONFIG=installer
      before_install:
        - cd ${TRAVIS_BUILD_DIR} && git fetch --unshallow && git fetch --all --tags
        - export JOBS=$((`cat /proc/cpuinfo | grep -c ^processor`+1));
      install:
        - wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-android-universal-1.14.4.tar.bz2 &&
          tar jxf gstreamer-1.0-android-universal-1.14.4.tar.bz2 -C ${TRAVIS_BUILD_DIR} &&
          wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.11.0-android_armv7-min.tar.bz2 &&
          tar jxf Qt5.11.0-android_armv7-min.tar.bz2 -C /tmp &&
          wget --quiet https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip &&
          unzip android-ndk-r16b-linux-x86_64.zip > /dev/null &&
          export ANDROID_NDK_ROOT=`pwd`/android-ndk-r16b &&
          export ANDROID_SDK_ROOT=/usr/local/android-sdk &&
          export PATH=/tmp/Qt5.11-android_armv7/5.11.0/android_armv7/bin:`pwd`/android-ndk-r16b:$PATH && echo $PATH
      before_script:
        - cd ${TRAVIS_BUILD_DIR}
          ./tools/update_android_version.sh;
        - if [[ "${CONFIG}" = "installer" && -z ${ANDROID_STOREPASS} ]]; then
            export CONFIG=release;
          fi
        - if [[ "${CONFIG}" = "installer" ]]; then
            openssl enc -d -aes-256-cbc -in ${TRAVIS_BUILD_DIR}/android/coex_qgc.jks.enc -out ${TRAVIS_BUILD_DIR}/android/coex_qgc.jks -k ${ANDROID_STOREKEY};
          fi
      script:
        - mkdir ${SHADOW_BUILD_DIR} && cd ${SHADOW_BUILD_DIR}
        - qmake -r ${TRAVIS_BUILD_DIR}/qgroundcontrol.pro CONFIG+=${CONFIG} -spec ${SPEC}
        - make -j$JOBS
    - name: "macOS build"
      os: osx
      osx_image: xcode9.2
      env: SPEC=macx-clang CONFIG=installer
      before_install:
        - cd ${TRAVIS_BUILD_DIR} && git fetch --unshallow && git fetch --all --tags
        - export JOBS=$((`sysctl -n hw.ncpu`+1));
      install:
        - wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.11.0-clang_64-min.tar.bz2 &&
          tar jxf Qt5.11.0-clang_64-min.tar.bz2 -C /tmp;
        - wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/osx-gstreamer.tar.bz2 &&
          sudo tar jxf osx-gstreamer.tar.bz2 -C /Library/Frameworks;
        - export QT_DIR=Qt5.11-clang_64/5.11.0/clang_64 &&
          export QT_QPA_PLATFORM_PLUGIN_PATH=/tmp/$QT_DIR/plugins &&
          export QML2_IMPORT_PATH=/tmp/$QT_DIR/qml &&
          export PATH=/tmp/$QT_DIR/bin:$PATH
      before_script:
        - cd ${TRAVIS_BUILD_DIR}
      script:
        - mkdir ${SHADOW_BUILD_DIR} && cd ${SHADOW_BUILD_DIR}
        - qmake -r ${TRAVIS_BUILD_DIR}/qgroundcontrol.pro CONFIG+=${CONFIG} CONFIG+=WarningsAsErrorsOn -spec ${SPEC};
        - make -j$JOBS
    - name: "Raspbian archive"
      os: linux
      arch: arm64
      dist: bionic
      services:
        - docker
      language: generic
      before_script:
        - sudo docker pull sfalexrog/qgc_builder:buster-0.1.0;
      script:
        - cd ${TRAVIS_BUILD_DIR} &&
          sudo docker run --rm -v $(pwd):/build -v /tmp:/tmp --env ARCH=${ARCH} --env SHADOW_BUILD_DIR=${SHADOW_BUILD_DIR} sfalexrog/qgc_builder:buster-0.1.0 /bin/bash -c 'cd /build; ./build_arm.sh';
      before_deploy:
        - cd ${SHADOW_BUILD_DIR}/release/package
        - sudo mv QGroundControl.tar.bz2 QGroundControl-arm.tar.bz2
        - sudo chmod -R a+rw ${SHADOW_BUILD_DIR}
        - cd ${TRAVIS_BUILD_DIR}

deploy:
  - provider: releases
    api-key: ${GITHUB_AUTH_TOKEN}
    file_glob: true
    file:
      - ${SHADOW_BUILD_DIR}/release/package/qgroundcontrol.*
      - ${SHADOW_BUILD_DIR}/release/package/QGroundControl.*
      - ${SHADOW_BUILD_DIR}/release/package/QGroundControl-arm.*
    skip_cleanup: true
    draft: true
    on:
      tags: true
